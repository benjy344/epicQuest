/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS/SCSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 */


// Core colors
$primary-color: #5755d9 !default;
$primary-color-dark: darken($primary-color, 3%) !default;
$primary-color-light: lighten($primary-color, 3%) !default;
$secondary-color: lighten($primary-color, 37.5%) !default;
$secondary-color-dark: darken($secondary-color, 3%) !default;
$secondary-color-light: lighten($secondary-color, 3%) !default;

// Gray colors
$dark-color: #454d5d !default;
$light-color: #fff !default;
$gray-color: lighten($dark-color, 40%) !default;
$gray-color-dark: darken($gray-color, 25%) !default;
$gray-color-light: lighten($gray-color, 20%) !default;

$border-color: lighten($dark-color, 60%) !default;
$border-color-dark: darken($border-color, 10%) !default;
$bg-color: lighten($dark-color, 66%) !default;
$bg-color-dark: darken($bg-color, 3%) !default;
$bg-color-light: $light-color !default;

// Control colors
$success-color: #32b643 !default;
$warning-color: #ffb700 !default;
$error-color: #e85600 !default;

// Other colors
$code-color: #e06870 !default;
$highlight-color: #ffe9b3 !default;
$body-bg: $bg-color-light !default;
$body-font-color: lighten($dark-color, 5%) !default;
$link-color: $primary-color !default;
$link-color-dark: darken($link-color, 5%) !default;

// Fonts
$base-font-family: 'Questrial Regular', -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto !default;
$mono-font-family: "SF Mono", "Segoe UI Mono", "Roboto Mono", Menlo, Courier, monospace !default;
$fallback-font-family: "Helvetica Neue", sans-serif !default;
$body-font-family: $base-font-family, $fallback-font-family !default;

// Unit sizes
$unit-o: .05rem !default;
$unit-h: .1rem !default;
$unit-1: .2rem !default;
$unit-2: .4rem !default;
$unit-3: .6rem !default;
$unit-4: .8rem !default;
$unit-5: 1rem !default;
$unit-6: 1.2rem !default;
$unit-7: 1.4rem !default;
$unit-8: 1.6rem !default;
$unit-9: 1.8rem !default;
$unit-10: 2rem !default;
$unit-12: 2.4rem !default;
$unit-16: 3.2rem !default;

// Font sizes
$html-font-size: 20px !default;
$html-line-height: 1.5 !default;
$font-size: .8rem !default;
$font-size-sm: .6rem !default;
$font-size-lg: .9rem !default;
$line-height: 1rem !default;

// Sizes
$layout-spacing: $unit-2 !default;
$layout-spacing-sm: $unit-1 !default;
$layout-spacing-lg: $unit-4 !default;
$border-radius: $unit-h !default;
$border-width: $unit-o !default;
$border-width-lg: $unit-h !default;
$control-size: $unit-9 !default;
$control-size-sm: $unit-7 !default;
$control-size-lg: $unit-10 !default;
$control-padding-x: $unit-2 !default;
$control-padding-x-sm: $unit-2 * .75 !default;
$control-padding-x-lg: $unit-2 * 1.5 !default;
$control-padding-y: ($control-size - $line-height) / 2 - $border-width !default;
$control-padding-y-sm: ($control-size-sm - $line-height) / 2 - $border-width !default;
$control-padding-y-lg: ($control-size-lg - $line-height) / 2 - $border-width !default;
$control-icon-size: .8rem !default;

$control-width-xs: 180px !default;
$control-width-sm: 320px !default;
$control-width-md: 640px !default;
$control-width-lg: 960px !default;
$control-width-xl: 1280px !default;

// Responsive breakpoints
$size-xs: 480px !default;
$size-sm: 600px !default;
$size-md: 840px !default;
$size-lg: 960px !default;
$size-xl: 1280px !default;
$size-2x: 1440px !default;

$responsive-breakpoint: $size-xs !default;

// Z-index
$zindex-0: 1 !default;
$zindex-1: 100 !default;
$zindex-2: 200 !default;
$zindex-3: 300 !default;
$zindex-4: 400 !default;

// Mixins

@mixin avatar-base($size: $unit-8) {
  font-size: $size / 2;
  height: $size;
  width: $size;
}

// Button variant mixin
@mixin button-variant($color: $primary-color) {
  background: $color;
  border-color: darken($color, 3%);
  color: $light-color;
  &:focus {
    @include control-shadow($color);
  }
  &:focus,
  &:hover {
    background: darken($color, 2%);
    border-color: darken($color, 5%);
    color: $light-color;
  }
  &:active,
  &.active {
    background: darken($color, 7%);
    border-color: darken($color, 10%);
    color: $light-color;
  }
  &.loading {
    @extend .btn-primary.loading;
  }
}

@mixin button-outline-variant($color: $primary-color) {
  background: $light-color;
  border-color: $color;
  color: $color;
  &:focus {
    @include control-shadow($color);
  }
  &:focus,
  &:hover {
    background: lighten($color, 50%);
    border-color: darken($color, 2%);
    color: $color;
  }
  &:active,
  &.active {
    background: $color;
    border-color: darken($color, 5%);
    color: $light-color;
  }
  &.loading {
    &::after {
      border-bottom-color: $color;
      border-left-color: $color;
    }
  }
}

// Clearfix mixin
@mixin clearfix() {
  &::after {
    clear: both;
    content: "";
    display: table;
  }
}

// Background color utility mixin
@mixin bg-color-variant($name: ".bg-primary", $color: $primary-color) {
  #{$name} {
    background: $color;

    @if (lightness($color) < 60) {
      color: $light-color;
    }
  }
}

// Text color utility mixin
@mixin text-color-variant($name: ".text-primary", $color: $primary-color) {
  #{$name} {
    color: $color;
  }

  a#{$name} {
    &:focus,
    &:hover {
      color: darken($color, 5%);
    }
  }
}

// Label base style
@mixin label-base() {
  border-radius: $border-radius;
  line-height: 1.2;
  padding: .1rem .15rem;
}

@mixin label-variant($color: $light-color, $bg-color: $primary-color) {
  background: $bg-color;
  color: $color;
}

// Margin utility mixin
@mixin margin-variant($id: 1, $size: $unit-1) {
  .m-#{$id} {
    margin: $size;
  }

  .mb-#{$id} {
    margin-bottom: $size;
  }

  .ml-#{$id} {
    margin-left: $size;
  }

  .mr-#{$id} {
    margin-right: $size;
  }

  .mt-#{$id} {
    margin-top: $size;
  }

  .mx-#{$id} {
    margin-left: $size;
    margin-right: $size;
  }

  .my-#{$id} {
    margin-bottom: $size;
    margin-top: $size;
  }
}

// Padding utility mixin
@mixin padding-variant($id: 1, $size: $unit-1) {
  .p-#{$id} {
    padding: $size;
  }

  .pb-#{$id} {
    padding-bottom: $size;
  }

  .pl-#{$id} {
    padding-left: $size;
  }

  .pr-#{$id} {
    padding-right: $size;
  }

  .pt-#{$id} {
    padding-top: $size;
  }

  .px-#{$id} {
    padding-left: $size;
    padding-right: $size;
  }

  .py-#{$id} {
    padding-bottom: $size;
    padding-top: $size;
  }
}

// Component focus shadow
@mixin control-shadow($color: $primary-color) {
  box-shadow: 0 0 0 .1rem rgba($color, .2);
}

// Shadow mixin
@mixin shadow-variant($offset) {
  box-shadow: 0 $offset ($offset + .05rem) * 2 rgba($dark-color, .3);
}

// Text Ellipsis
@mixin text-ellipsis() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Toast variant mixin
@mixin toast-variant($color: $dark-color) {
  background: rgba($color, .9);
  border-color: $color;
}

// Component transition
@mixin control-transition() {
  transition: all .2s ease;
}

// Buttons
.btn {
  @include control-transition();
  appearance: none;
  background: $bg-color-light;
  border: $border-width solid $primary-color;
  border-radius: $border-radius;
  color: $primary-color;
  cursor: pointer;
  display: inline-block;
  font-size: $font-size;
  height: $control-size;
  line-height: $line-height;
  outline: none;
  padding: $control-padding-y $control-padding-x;
  text-align: center;
  text-decoration: none;
  user-select: none;
  vertical-align: middle;
  white-space: nowrap;
  position:relative;
  &:focus {
    @include control-shadow();
  }
  &:focus,
  &:hover {
    background: $secondary-color;
    border-color: $primary-color-dark;
    text-decoration: none;
  }
  &:active,
  &.active {
    background: $primary-color-dark;
    border-color: darken($primary-color-dark, 5%);
    color: $light-color;
    text-decoration: none;
    &.loading {
      &::after {
        border-bottom-color: $light-color;
        border-left-color: $light-color;
      }
    }
  }
  &[disabled],
  &:disabled,
  &.disabled {
    cursor: default;
    opacity: .5;
    pointer-events: none;
  }

  // Button Primary
  &.btn-primary {
    background: $primary-color;
    border-color: $primary-color-dark;
    color: $light-color;
    &:focus,
    &:hover {
      background: darken($primary-color-dark, 2%);
      border-color: darken($primary-color-dark, 5%);
      color: $light-color;
    }
    &:active,
    &.active {
      background: darken($primary-color-dark, 4%);
      border-color: darken($primary-color-dark, 7%);
      color: $light-color;
    }
    &.loading {
      &::after {
        border-bottom-color: $light-color;
        border-left-color: $light-color;
      }
    }
  }

  // Button Colors
  &.btn-success {
    @include button-variant($success-color);
  }

  &.btn-error {
    @include button-variant($error-color);
  }

  // Button Link
  &.btn-link {
    background: transparent;
    border-color: transparent;
    color: $link-color;
    &:focus,
    &:hover,
    &:active,
    &.active {
      color: $link-color-dark;
    }
  }

  // Button Sizes
  &.btn-sm {
    font-size: $font-size-sm;
    height: $control-size-sm;
    padding: $control-padding-y-sm $control-padding-x-sm;
  }

  &.btn-lg {
    font-size: $font-size-lg;
    height: $control-size-lg;
    padding: $control-padding-y-lg $control-padding-x-lg;
  }

  // Button Block
  &.btn-block {
    display: block;
    width: 100%;
  }

  // Button Action
  &.btn-action {
    width: $control-size;
    padding-left: 0;
    padding-right: 0;

    &.btn-sm {
      width: $control-size-sm;
    }

    &.btn-lg {
      width: $control-size-lg;
    }
  }

  // Button Clear
  &.btn-clear {
    background: transparent;
    border: 0;
    color: currentColor;
    height: $unit-4;
    line-height: $unit-4;
    margin-left: $unit-1;
    margin-right: -2px;
    opacity: 1;
    padding: 0;
    text-decoration: none;
    width: $unit-4;

    &:hover {
      opacity: .95;
    }

    &::before {
      content: "\2715";
    }
  }
}
.loading::after {
    animation: loading 500ms infinite linear;
    border: .1rem solid #5755d9;
    border-radius: 50%;
    border-right-color: transparent;
    border-top-color: transparent;
    content: "";
    display: block;
    height: .8rem;
    left: 50%;
    margin-left: -.4rem;
    margin-top: -.4rem;
    position: absolute;
    top: 50%;
    width: .8rem;
    z-index: 1;
}

@keyframes loading {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
// Button groups
.btn-group {
  display: inline-flex;
  flex-wrap: wrap;

  .btn {
    flex: 1 0 auto;
    &:first-child:not(:last-child) {
      border-bottom-right-radius: 0;
      border-top-right-radius: 0;
    }
    &:not(:first-child):not(:last-child) {
      border-radius: 0;
      margin-left: -$border-width;
    }
    &:last-child:not(:first-child) {
      border-bottom-left-radius: 0;
      border-top-left-radius: 0;
      margin-left: -$border-width;
    }
    &:focus,
    &:hover,
    &:active,
    &.active {
      z-index: $zindex-0;
    }
  }

  &.btn-group-block {
    display: flex;

    .btn {
      flex: 1 0 0;
    }
  }
}

form.horizontal,
form.horizontal input {
    display: inline-block;
}

form.vertical,
form.vertical input {
    display: block;
}

form.vertical input {
    margin-bottom: 3%;
    margin-left: auto;
    margin-right: auto;

    &[type='text'], &[type='password'] {
        padding: 5px 15px;
        width: 50%;
    }
}

input {
    &[type='submit'] {
        padding: 7px 20px;
        border-radius: 5px;
        text-transform: uppercase;
        border: none;
        font-family: 'Questrial Regular', sans-serif;
        font-size: 15px;
    }

    &::-webkit-input-placeholder {
        text-transform: uppercase;
        font-family: 'Questrial Regular', sans-serif;
    }
    &::-moz-placeholder {
        text-transform: uppercase;
        font-family: 'Questrial Regular', sans-serif;
    }
    &:-ms-input-placeholder {
        text-transform: uppercase;
        font-family: 'Questrial Regular', sans-serif;
    }
    &:-moz-placeholder {
        text-transform: uppercase;
        font-family: 'Questrial Regular', sans-serif;
    }
}

// Forms
.form-group {
  &:not(:last-child) {
    margin-bottom: $layout-spacing;
  }
}

fieldset {
  margin-bottom: $layout-spacing-lg;
}

legend {
  font-size: $font-size-lg;
  font-weight: 500;
  margin-bottom: $layout-spacing-lg;
}

// Form element: Label
.form-label {
  display: block;
  line-height: $line-height;
  padding: $control-padding-y + $border-width 0;

  &.label-sm {
    font-size: $font-size-sm;
    padding: $control-padding-y-sm + $border-width 0;
  }

  &.label-lg {
    font-size: $font-size-lg;
    padding: $control-padding-y-lg + $border-width 0;
  }
}

// Form element: Input
.form-input {
  @include control-transition();
  appearance: none;
  background: $bg-color-light;
  background-image: none;
  border: $border-width solid $border-color-dark;
  border-radius: $border-radius;
  color: $body-font-color;
  display: block;
  font-size: $font-size-sm;
  height: $control-size;
  line-height: $line-height;
  max-width: 100%;
  outline: none;
  padding: $control-padding-y $control-padding-x;
  position: relative;
  width: 100%;
  &:focus {
    @include control-shadow();
    border-color: $primary-color;
  }
  &::placeholder {
    color: $gray-color;
  }

  // Input sizes
  &.input-sm {
    font-size: $font-size-sm;
    height: $control-size-sm;
    padding: $control-padding-y-sm $control-padding-x-sm;
  }

  &.input-lg {
    font-size: $font-size-lg;
    height: $control-size-lg;
    padding: $control-padding-y-lg $control-padding-x-lg;
  }

  &.input-inline {
    display: inline-block;
    vertical-align: middle;
    width: auto;
  }

  // Input types
  &[type="file"] {
    height: auto;
  }
}

// Form element: Textarea
textarea.form-input {
  height: auto;
}

// Form element: Input hint
.form-input-hint {
  color: $gray-color;
  font-size: $font-size-sm;
  margin-top: $unit-1;

  .has-success &,
  .is-success + & {
    color: $success-color;
  }

  .has-error &,
  .is-error + & {
    color: $error-color;
  }
}

// Form element: Select
.form-select {
  appearance: none;
  border: $border-width solid $border-color-dark;
  border-radius: $border-radius;
  color: inherit;
  font-size: $font-size;
  height: $control-size;
  line-height: $line-height;
  outline: none;
  padding: $control-padding-y $control-padding-x;
  vertical-align: middle;
  width: 100%;

  &[size],
  &[multiple] {
    height: auto;

    option {
      padding: $unit-h $unit-1;
    }
  }
  &:not([multiple]):not([size]) {
    background: #fff url("data:image/svg+xml;charset=utf8,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%204%205'%3E%3Cpath%20fill='%23667189'%20d='M2%200L0%202h4zm0%205L0%203h4z'/%3E%3C/svg%3E") no-repeat right .35rem center/.4rem .5rem;
    padding-right: $control-icon-size + $control-padding-x;
  }
  &:focus {
    @include control-shadow();
    border-color: $primary-color;
  }
  &::-ms-expand {
    display: none;
  }

  // Select sizes
  &.select-sm {
    font-size: $font-size-sm;
    height: $control-size-sm;
    padding: $control-padding-y-sm ($control-icon-size + $control-padding-x-sm) $control-padding-y-sm $control-padding-x-sm;
  }

  &.select-lg {
    font-size: $font-size-lg;
    height: $control-size-lg;
    padding: $control-padding-y-lg ($control-icon-size + $control-padding-x-lg) $control-padding-y-lg $control-padding-x-lg;
  }
}

// Form Icons
.has-icon-left,
.has-icon-right {
  position: relative;

  .form-icon {
    height: $control-icon-size;
    margin: 0 $control-padding-y;
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: $control-icon-size;
  }
}

.has-icon-left {
  .form-icon {
    left: $border-width;
  }

  .form-input {
    padding-left: $control-icon-size + $control-padding-y * 2;
  }
}

.has-icon-right {
  .form-icon {
    right: $border-width;
  }

  .form-input {
    padding-right: $control-icon-size + $control-padding-y * 2;
  }
}

// Form element: Checkbox and Radio
.form-checkbox,
.form-radio,
.form-switch {
  display: inline-block;
  line-height: $line-height;
  margin: ($control-size - $control-size-sm) / 2 0;
  min-height: 1.2rem;
  padding: (($control-size-sm - $line-height) / 2) $control-padding-x (($control-size-sm - $line-height) / 2) ($control-icon-size + $control-padding-x);
  position: relative;

  input {
    clip: rect(0, 0, 0, 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    position: absolute;
    width: 1px;
    &:focus + .form-icon {
      @include control-shadow();
      border-color: $primary-color;
    }
    &:checked + .form-icon {
      background: $primary-color;
      border-color: $primary-color;
    }
  }

  .form-icon {
    @include control-transition();
    border: $border-width solid $border-color-dark;
    cursor: pointer;
    display: inline-block;
    position: absolute;
  }

  // Input checkbox, radio and switch sizes
  &.input-sm {
    font-size: $font-size-sm;
    margin: 0;
  }

  &.input-lg {
    font-size: $font-size-lg;
    margin: ($control-size-lg - $control-size-sm) / 2 0;
  }
}

.form-checkbox,
.form-radio {
  .form-icon {
    background: $bg-color-light;
    height: $control-icon-size;
    left: 0;
    top: ($control-size-sm - $control-icon-size) / 2;
    width: $control-icon-size;
  }

  input {
    &:active + .form-icon {
      background: $bg-color-dark;
    }
  }
}
.form-checkbox {
  .form-icon {
    border-radius: $border-radius;
  }

  input {
    &:checked + .form-icon {
      &::before {
        background-clip: padding-box;
        border: $border-width-lg solid $light-color;
        border-left-width: 0;
        border-top-width: 0;
        content: "";
        height: 12px;
        left: 50%;
        margin-left: -4px;
        margin-top: -8px;
        position: absolute;
        top: 50%;
        transform: rotate(45deg);
        width: 8px;
      }
    }
    &:indeterminate + .form-icon {
      background: $primary-color;
      border-color: $primary-color;
      &::before {
        background: $bg-color-light;
        content: "";
        height: 2px;
        left: 50%;
        margin-left: -5px;
        margin-top: -1px;
        position: absolute;
        top: 50%;
        width: 10px;
      }
    }
  }
}
.form-radio {
  .form-icon {
    border-radius: 50%;
  }

  input {
    &:checked + .form-icon {
      &::before {
        background: $bg-color-light;
        border-radius: 50%;
        content: "";
        height: 4px;
        left: 50%;
        position: absolute;
        top: 50%;
        transform: translate(-50%, -50%);
        width: 4px;
      }
    }
  }
}

// Form element: Switch
.form-switch {
  padding-left: ($unit-8 + $control-padding-x);

  .form-icon {
    background: $gray-color-light;
    background-clip: padding-box;
    border-radius: $unit-2 + $border-width;
    height: $unit-4 + $border-width * 2;
    left: 0;
    top: ($control-size-sm - $unit-4) / 2 - $border-width;
    width: $unit-8;
    &::before {
      @include control-transition();
      background: $bg-color-light;
      border-radius: 50%;
      content: "";
      display: block;
      height: $unit-4;
      left: 0;
      position: absolute;
      top: 0;
      width: $unit-4;
    }
  }

  input {
    &:checked + .form-icon {
      &::before {
        left: 14px;
      }
    }
    &:active + .form-icon {
      &::before {
        background: $bg-color;
      }
    }
  }
}

// Form element: Input groups
.input-group {
  display: flex;

  .input-group-addon {
    background: $bg-color;
    border: $border-width solid $border-color-dark;
    border-radius: $border-radius;
    line-height: $line-height;
    padding: $control-padding-y $control-padding-x;
    white-space: nowrap;

    &.addon-sm {
      font-size: $font-size-sm;
      padding: $control-padding-y-sm $control-padding-x-sm;
    }

    &.addon-lg {
      font-size: $font-size-lg;
      padding: $control-padding-y-lg $control-padding-x-lg;
    }
  }

  .form-input,
  .form-select {
    flex: 1 1 auto;
  }

  .input-group-btn {
    z-index: $zindex-0;
  }

  .form-input,
  .form-select,
  .input-group-addon,
  .input-group-btn {
    &:first-child:not(:last-child) {
      border-bottom-right-radius: 0;
      border-top-right-radius: 0;
    }
    &:not(:first-child):not(:last-child) {
      border-radius: 0;
      margin-left: -$border-width;
    }
    &:last-child:not(:first-child) {
      border-bottom-left-radius: 0;
      border-top-left-radius: 0;
      margin-left: -$border-width;
    }
    &:focus {
      z-index: $zindex-0 + 1;
    }
  }

  .form-select {
    width: auto;
  }

  &.input-inline {
    display: inline-flex;
  }
}

// Form validation states
.form-input,
.form-select {
  .has-success &,
  &.is-success {
    border-color: $success-color;
    &:focus {
      @include control-shadow($success-color);
    }
  }

  .has-error &,
  &.is-error {
    border-color: $error-color;
    &:focus {
      @include control-shadow($error-color);
    }
  }
}

.form-checkbox,
.form-radio,
.form-switch {
  .has-error &,
  &.is-error {
    .form-icon {
      border-color: $error-color;
    }

    input {
      &:checked + .form-icon {
        background: $error-color;
        border-color: $error-color;
      }

      &:focus + .form-icon {
        @include control-shadow($error-color);
        border-color: $error-color;
      }
    }
  }
}

// validation based on :placeholder-shown (Edge doesn't support it yet)
.form-input {
  &:not(:placeholder-shown) {
    &:invalid {
      border-color: $error-color;
      &:focus {
        @include control-shadow($error-color);
      }

      & + .form-input-hint {
        color: $error-color;
      }
    }
  }
}

// Form disabled and readonly
.form-input,
.form-select {
  &:disabled,
  &.disabled {
    background-color: $bg-color-dark;
    cursor: not-allowed;
    opacity: .5;
  }
}

.form-input {
  &[readonly] {
    background-color: $bg-color;
  }
}

input {
  &:disabled,
  &.disabled {
    & + .form-icon {
      background: $bg-color-dark;
      cursor: not-allowed;
      opacity: .5;
    }
  }
}

.form-switch {
  input {
    &:disabled,
    &.disabled {
      & + .form-icon::before {
        background: $bg-color-light;
      }
    }
  }
}

// Form Horizontal
.form-horizontal {
  padding: $layout-spacing 0;

  .form-group {
    display: flex;
  }
}

a,
a:focus,
a:active,
a:hover {
	text-decoration: none;
	color: #000;
}

a {
	color: $link-color;
	outline: none;
	text-decoration: none;

	&:focus {
	  @include control-shadow();
	}

	&:focus,
	&:hover,
	&:active,
	&.active {
	  color: $link-color-dark;
	  text-decoration: underline;
	}
}


// Base
@font-face {
  //font-family: 'Questrial Regular';
  //src: url('../fonts/Questrial-Regular.ttf') format('truetype');
  font-weight: normal;
  font-style: normal;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

html {
  box-sizing: border-box;
  font-size: $html-font-size;
  line-height: $html-line-height;
  -webkit-tap-highlight-color: transparent;
}

body {
  background: $body-bg;
  box-sizing: border-box;
  color: $body-font-color;
  font-family: $body-font-family;
  font-size: $font-size;
  overflow-x: hidden;
  text-rendering: optimizeLegibility;
}

.toggle-nav {
  position: fixed;
  background-color: transparent;
  width: 80px;
  height: 80px;
  top: 0;
  left:0;
  border: none;
  outline: none;
  z-index: 4;
  cursor: pointer;
  transition: opacity 0.3s;

  &:hover {
    opacity: .7;
    transition: opacity 0.3s;
  }

  span {
    position: relative;
    width: 40px;
    height: 2px;
    background-color: #fff;
    display: block;
    margin: 0 auto;

    &::before {
      position: absolute;
      top: -10px;
      content: "";
      width: 133%;
      height: 2px;
      background-color: #fff;
      left: 0;

    }
    &::after {
      position: absolute;
      bottom: -10px;
      content: "";
      width: 66%;
      height: 2px;
      background-color: #fff;
      left: 0;
    }
  }
}

.main-nav {
  position: fixed;
  left: -400px;
  width: 400px;
  height: 100vh;
  transition: all .6s ease-in;
  background-color: #fff;
  top: 0;
  z-index: 300;

  .user-info {
    p {
      margin: 40px;
      display:inline-block;
    }
  }

  .logout {
    border: .1rem solid $primary-color;
    border-radius: 50%;
    border-top-color: transparent;
    box-sizing: border-box;
    display: inline-block;
    font-size: inherit;
    font-style: normal;
    height: 1em;
    position: relative;
    text-indent: -9999px;
    vertical-align: middle;
    width: 1em;

    &::before {
      background: $primary-color;
      content: "";
      height: .5em;
      top: .1em;
      width: .1rem;
      display: block;
      left: 50%;
      position: absolute;
      transform: translate(-50%, -50%);
    }
  }

  .overlay {
    background: rgba(#242322, .6);
    width: 100vw;
    height: 100vh;
    position: absolute;
    top: 0;
    left: -100vw;
    z-index: -1;
    cursor: pointer;
  }

  &.open {
    left: 0;
    transition: all .6s ease-in;

    .overlay {
      left: 400px;
    }
  }
}





